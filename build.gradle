plugins {
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'checkstyle'
    id "org.sonarqube" version "3.0"
    id 'jacoco'
}

group = 'az.dev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}


ext {
    set('springCloudVersion', "2021.0.6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "io.github.openfeign:feign-annotation-error-decoder:11.7"
    implementation 'io.jsonwebtoken:jjwt:0.9.0'
    implementation 'org.postgresql:postgresql'
    implementation "org.apache.commons:commons-lang3:${apacheCommonsLang3Version}"
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    compileOnly 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "javax.validation:validation-api:2.0.1.Final"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

wrapper {
    gradleVersion = '7.3.2'
}

checkstyle {
    toolVersion = "10.3.4"
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
    ignoreFailures = false
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        html.enabled true
    }
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}